# -*- mode: shell-script -*-

# prompt
function _ps1_show_opam_switch() {
  exit_code=$?
  opam switch show || echo "??"
  return $exit_code
}

export PS1="[\[$(tput sgr0)\]\[\033[38;5;128m\]\u\[$(tput sgr0)\]@\[\033[38;5;26m\]\H\[$(tput sgr0)\] 🐪 \033[33m\]\$(_ps1_show_opam_switch)\[$(tput sgr0)\]]\[\033[38;5;15m\] \[$(tput sgr0)\]\[\033[38;5;64m\]\w\[$(tput sgr0)\]\[\033[38;5;15m\]\n\[$(tput sgr0)\]\[\033[38;5;112m\]\$?\[$(tput sgr0)\] \\$ "

# environment variables
export EDITOR='qe'

# aliases
alias ls='ls --color=auto -F'

# regarding history
HISTSIZE=
HISTFILESIZE=

# Avoid duplicates
HISTCONTROL=ignoredups:erasedups
# When the shell exits, append to the history file instead of overwriting it
shopt -s histappend

# After each command, append to the history file and reread it
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a"

# local settings
if [ -f ~/.bashrc_local ]; then
    source ~/.bashrc_local
fi

# dune related aliases
alias bb="dune build"
alias bbt="dune build @runtest"
alias bbr="dune build && echo && OCAMLRUNPARAM=b "

function caml() {
  if [ $# -eq 0 ]; then
    opam switch
  else
    echo 'eval' '$(opam env --set-switch' "--switch=\"$1\")"
    eval $(opam env --set-switch --switch="$1")
  fi
}

function backhist() {
    (cd "$HOME" && \
     mkdir -p bash_history_backup && \
     gzip -c .bash_history > bash_history_backup/bash_history_$(date +%s).gz)
}

function gghelp() {
    cat << EOF
------------
>>> Pure Git
------------
gita - git add & git status
  . bonus: gitaa          = gita for the whole repositiory
  . bonus: gita. / gita.. = gita for the current / parent dir
gitr - git reset
gco  - git checkout

gg - git status

 .l - git log             [ggl]

 .s - git diff (staged)   [ggs]
 .f - git diff (unstaged) [ggf]

 .vv - git show           [ggvv]
 .v  - git show --stat    [ggv]

-------------------
>>> GitHub Specific
-------------------
ghco - pr checkout

ghpr - pr create

ghpv - pr view (browser)
ghpv-cli - pr view (cli)
EOF
}

function ghco() {
    echo "executing: gh pr checkout" "$@"
    gh pr checkout "$1"
}

function ghpv() {
    echo "executing: gh pr view -w" "$@"
    gh pr view -w "$@"
}

function ghpv-cli() {
    echo "executing: gh pr view" "$@"
    gh pr view "$@"
}

function ghpr() {
    echo "executing: gh pr create" "$@"
    gh pr create "$@"
}

alias lsport='lsof -iTCP -sTCP:LISTEN -n -P'

alias gitr='git reset'
alias gco='git checkout'
alias gg='git status'
alias ggb='git bb'
alias ggl='git log'
alias ggf='git df'
alias ggs='git ds'
alias ggv='git show --stat'
alias ggvv='git show'

function gita() {
    git add "$@" && gg
}
alias "gita."='gita .'
alias "gita.."='gita ..'
alias "gco."='git co .'
alias "gco.."='git co ..'
function gitaa() {
    gita "$@" -- "$(git rev-parse --show-toplevel)"
}
